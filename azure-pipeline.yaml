# trigger: master

pr: none

pool:
  vmImage: 'ubuntu-latest'


parameters:
  - name: resourceGroup
    displayName: Resource Group
    type: string
    default: 'rg-eastus-terraform-02'
    values:
    - rg-eastus-terraform-02
    - rg-eastus-terraform-01
  - name: networkname
    displayName: Resource Location
    type: string
    default: 'eastus'
    values:
    - westus
    - eastus

name: my-test-job

jobs:
- job: Teraform_init
  displayName: Terraform init
  steps:
  - task: AzureCLI@2
    inputs:
     azureSubscription: 'Azure subscription 1 (11fe55fc-d6c0-4abf-afc1-2bcb431c8cc8)'
     scriptType: 'bash'
     scriptLocation: 'inlineScript'
     inlineScript: |
      $env:ARM_CLIENT_ID       ??= $env:servicePrincipalId
      $env:ARM_CLIENT_SECRET   ??= $env:servicePrincipalKey
      $env:ARM_TENANT_ID       ??= $env:tenantId
      # Propagate from Azure CLI context
      $env:ARM_TENANT_ID       ??= $(az account show --query tenantId -o tsv)
      $env:ARM_SUBSCRIPTION_ID ??= $(az account show --query id -o tsv)
     addSpnToEnvironment: true
     useGlobalConfig: true
     failOnStandardError: true 
     workingDirectory: $(System.DefaultWorkingDirectory)/resources 

  - task: TerraformInstaller@0
    inputs:
     terraformVersion: 'latest'
  
  - task: TerraformTaskV2@2
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/resources'
      backendServiceArm: 'Azure subscription 1 (11fe55fc-d6c0-4abf-afc1-2bcb431c8cc8)'
      backendAzureRmResourceGroupName: 'rg-test-eastus-01'
      backendAzureRmStorageAccountName: 'stgtesteastus01'
      backendAzureRmContainerName: 'tfstate'
      backendAzureRmKey: 'terraform.tfstate'

